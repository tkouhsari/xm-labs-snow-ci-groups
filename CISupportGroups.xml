<?xml version="1.0" encoding="UTF-8"?>
<unload unload_date="2017-03-31 16:11:23">
<sys_remote_update_set action="INSERT_OR_UPDATE">
<application display_value="xMatters">5950d7444f2231000e9fa88ca310c78c</application>
<application_name>xMatters</application_name>
<application_scope>x_xma_xmatters</application_scope>
<application_version>3.7.11</application_version>
<collisions/>
<commit_date/>
<deleted/>
<description>Adds a CI Support groups to the Engage with xMatters page. </description>
<inserted/>
<name>CI  Support Groups for Engage</name>
<origin_sys_id/>
<release_date/>
<remote_sys_id>946b303ddb313200a34fd421cf961929</remote_sys_id>
<state>loaded</state>
<summary/>
<sys_class_name>sys_remote_update_set</sys_class_name>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2017-03-31 16:11:22</sys_created_on>
<sys_id>3cc0de5adbf53200a34fd421cf9619ba</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2017-03-31 16:11:22</sys_updated_on>
<update_set display_value=""/>
<update_source display_value=""/>
<updated/>
</sys_remote_update_set>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="xMatters">5950d7444f2231000e9fa88ca310c78c</application>
<category>customer</category>
<comments/>
<name>sys_ui_page_c65690b94f2822008472a88ca310c7c2</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ui_page"&gt;&lt;sys_ui_page action="INSERT_OR_UPDATE"&gt;&lt;category&gt;general&lt;/category&gt;&lt;client_script/&gt;&lt;description/&gt;&lt;direct&gt;false&lt;/direct&gt;&lt;endpoint&gt;x_xma_xmatters_xm_engage_with_xmatters_content.do&lt;/endpoint&gt;&lt;html&gt;&lt;![CDATA[&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null"&gt;
&lt;script src="x_xma_xmatters.angular.min.jsdbx"&gt;&lt;/script&gt;
&lt;script src="x_xma_xmatters.angular-ui-bootstrap.min.jsdbx"&gt;&lt;/script&gt;
&lt;script src="x_xma_xmatters.xm_app_engage_xmatters.jsdbx"&gt;&lt;/script&gt;
&lt;script src="x_xma_xmatters.angular.translate.min.jsdbx"&gt;&lt;/script&gt;
&lt;script src="x_xma_xmatters.xm_mod_glide_ajax.jsdbx"&gt;&lt;/script&gt;
&lt;script src="x_xma_xmatters.xm_mod_xmatters_service.jsdbx"&gt;&lt;/script&gt;
&lt;script src="x_xma_xmatters.xm_mod_location_service.jsdbx"&gt;&lt;/script&gt;
&lt;script src="x_xma_xmatters.xm_mod_options_provider.jsdbx"&gt;&lt;/script&gt;
&lt;script src="x_xma_xmatters.ng-tags-input.min.jsdbx"&gt;&lt;/script&gt;
&lt;script src="x_xma_xmatters.xm_recipient_template.jsdbx"&gt;&lt;/script&gt;
&lt;script src="x_xma_xmatters.xm_engage_ci_group_template.jsdbx"&gt;&lt;/script&gt;
&lt;link href="//netdna.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.css" rel="stylesheet"&gt;&lt;/link&gt;
&lt;link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css" integrity="sha384-1q8mTJOASx8j1Au+a5WDVnPi2lkFfwwEAa8hDDdjZlpLegxhjVME1fgjWPGmkzs7" crossorigin="anonymous"&gt;&lt;/link&gt;
&lt;style&gt;
	body {
		font-family: SourceSansPro-Regular, SourceSansPro, "Helvetica Neue", Arial;
	        padding-top: 0;
	}
	.xm-label {
		font-size: 13px;
		font-weight: normal;
	}
	input.xm-tracked.ng-dirty, textarea.xm-tracked.ng-dirty {
		border: 1px orange solid;
	}
	form.ng-submitted input.ng-invalid, form.ng-submitted textarea.ng-invalid {
		border: 1px red solid;
	}
	a.xm-help {
		margin-left: 5px;
		display: inline-block !important;	
	}
	.ng-dirty .tags {
		/**border-color: orange; **/
	}
	.xm-tags-input-group .input-group-btn .btn {
	   height: 34px;
	}
	.tags {
	    border: 1px solid #ccc !important;
	}
	form.ng-submitted .ng-invalid .tags {
		border-color: red !important;
	}
	tags-input .tags {
	     box-shadow: none !important;
	}
	tags-input .tags .tag-item {
	    background: #445465;
	    border: 0;
	}
	tags-input .tags .tag-item .remove-button {
	    color: white;
	}
	tags-input .tags .tag-item .remove-button:hover {
	    color: #bec1c6;;
	}
	tags-input .tags .tag-item.selected {
		background-color: #ae1b1f;
	}
	.xm-input-group-btn {
		background-color: #f6f6f6;
		border: solid 1px #cccccc;
		width: 106px;
	}
	.xm-left {
	     float: left;
	}
	.xm-right {
	    float: right;
	}
	.xm-tag-feedback {
	   right: 10px;
	}
	.xm-error {
	   color: red;
	   font-size: 13px;
	}
	.xm-btn-default, .xm-btn-default:focus, .xm-btn-default:hover {
	    font-family: SourceSansPro-Regular, SourceSansPro, "Helvetica Neue", Arial;   
	    color: #343d47;
	    background-color: rgba(255, 255, 255, 0.45);
	    border-color: #bdc0c4;
	}
	tags-input .tags .tag-item {
	    font-family: SourceSansPro-Regular, SourceSansPro, "Helvetica Neue", Arial;   
	}
	tags-input .tags .input {
	    font-family: SourceSansPro-Regular, SourceSansPro, "Helvetica Neue", Arial;   
	}
	tags-input .autocomplete .suggestion-item {
	    font-family: SourceSansPro-Regular, SourceSansPro, "Helvetica Neue", Arial;   
	}
	h4.xm-header {
	     font-size: 21px;
	     font-weight: normal;
	     margin-top: 0;
	}
	.xm-left-icon {
	    margin-right: 5px;
	}
	.xm-right-icon {
	    margin-left: 0;
	}
	.xm-right-icon .remove-button .fa {
	     font-size: 14px;
	     vertical-align: text-top;
	}
	.form-control-feedback .fa {
	     color: rgb(52, 61, 71);
	}
	.xm-success-message {
	    max-width: 80%;
	    min-width: 375px;
	    padding: 0 40px;
	}
&lt;/style&gt;
&lt;div id="engage" ng-app="xm.engage-xm" class="container-fluid" ng-cloak=""&gt;
	&lt;div ng-controller="engageCtlr"&gt;
		&lt;div class="panel" ng-show="!is_finished"&gt;
		&lt;h4 class="xm-header"&gt;{{ 'ENGAGE_XM.TITLE' | translate }}&lt;/h4&gt;
		&lt;form name="engageXMForm" novalidate=""&gt;
			&lt;div class="row"&gt;
				&lt;div class="form-group col-md-12 has-feedback" ng-class="engageXMForm.ci_groups.$error.required &amp;amp;&amp;amp; engageXMForm.recipients.$error.required ? 'is-required' : 'is-filled'"&gt;
					&lt;span class="required-marker" &gt;&lt;/span&gt;
					&lt;label class="xm-label"&gt;{{ 'ENGAGE_XM.LABEL.RECIPIENTS' | translate }}&lt;/label&gt;
					&lt;div class="input-group xm-tags-input-group"&gt;
						&lt;span class="input-group-btn"&gt;
							&lt;button type="button" class="btn btn-secondary xm-input-group-btn dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"&gt;
								&lt;span class="xm-left"&gt;{{ activeRecipientType.label | translate }}&lt;/span&gt;
								&lt;span class="xm-right"&gt;
									&lt;i class="fa fa-chevron-down"&gt;&lt;/i&gt;
								&lt;/span&gt;
							&lt;/button&gt;
							&lt;ul class="dropdown-menu"&gt;
								&lt;li ng-repeat="rType in recipientTypes"&gt;
									&lt;a href="#" ng-click="selectRecipientType( $index )"&gt;{{ rType.label | translate }}&lt;/a&gt;
								&lt;/li&gt;
							&lt;/ul&gt;
						&lt;/span&gt;
						&lt;tags-input ng-model="recipients" id="recipients" name="recipients" ng-required="!engageXMForm.ci_groups" template="x_xma_xmatters_xm_engage_recipient_template.do?sysparm_nostack=true"&gt;
							&lt;auto-complete source="activeRecipientType.typeahead($query)"&gt;&lt;/auto-complete&gt;
						&lt;/tags-input&gt;
					&lt;/div&gt;
					&lt;span class="form-control-feedback xm-tag-feedback" ng-show="xm_search_state.isSearching"&gt;
						&lt;i class="fa fa-spinner fa-spin fa-fw"&gt;&lt;/i&gt;
					&lt;/span&gt;
					&lt;div class="xm-error" ng-messages="engageXMForm.recipients.$error" ng-show="engageXMForm.$submitted"&gt;
						&lt;div ng-message="required"&gt;{{ 'ENGAGE_XM.ERROR.REQUIRED' | translate }}&lt;/div&gt;
					&lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;	
			
			&lt;!--            CI GROUPS         --&gt;
			&lt;div class="row"&gt;
				&lt;div class="form-group col-md-12 has-feedback" ng-class="engageXMForm.ci_groups.$error.required &amp;amp;&amp;amp; engageXMForm.recipients.$error.required ? 'is-required' : 'is-filled'"&gt;
					&lt;span class="required-marker" &gt;&lt;/span&gt;
					&lt;label class="xm-label"&gt;{{ 'ENGAGE_XM.LABEL.CI_GROUPS' | translate }}&lt;/label&gt;
					&lt;tags-input ng-model="ci_groups" id="ci_groups" name="ci_groups" ng-required="!engageXMForm.recipients" template="x_xma_xmatters_xm_engage_ci_group_template.do?sysparm_nostack=true"
									display-property="label" 
									 key-property="label"
									placeholder="Pick a group" replace-spaces-with-dashes="false"&gt;
						&lt;auto-complete source="loadCIGroups( $query )"
									   min-length="0"
									   load-on-focus="true"
									   load-on-empty="true"
									   load-on-down-arrow="true"
									   max-results-to-show="32"
									   display-property="label"
									   &gt;
						&lt;/auto-complete&gt;
							
					&lt;/tags-input&gt;
				&lt;/div&gt;

			&lt;/div&gt;
			
			&lt;div class="row"&gt;
				&lt;div class="form-group col-sm-6" ng-class="engageXMForm.send_priority.$error.required ? 'is-required' : 'is-filled'"&gt;
					&lt;span class="required-marker" &gt;&lt;/span&gt;
					&lt;label class="xm-label"&gt;{{ 'ENGAGE_XM.LABEL.SEND_PRIORITY' | translate }}&lt;/label&gt;
					&lt;select class="form-control" ng-model="send_priority" id="send_priority" name="send_priority"&gt;
						&lt;option ng-repeat="priorityOpt in send_priority_options" value="{{priorityOpt.value}}" required="required"&gt;{{ priorityOpt.label | translate }}&lt;/option&gt;
					&lt;/select&gt;
					&lt;div class="xm-error" ng-messages="engageXMForm.send_priority.$error" ng-show="engageXMForm.$submitted"&gt;
						&lt;div ng-message="required"&gt;{{ 'ENGAGE_XM.ERROR.REQUIRED' | translate }}&lt;/div&gt;
					&lt;/div&gt;
				&lt;/div&gt;
				&lt;div class="form-group col-sm-6"&gt;
					&lt;label class="xm-label"&gt;{{ 'ENGAGE_XM.LABEL.CONFERENCE_BRIDGE' | translate }}&lt;/label&gt;
					&lt;select class="form-control" ng-model="conference_bridge"&gt;
						&lt;option ng-repeat="bridgeOpt in conference_bridge_options" value="{{bridgeOpt.value}}"&gt;{{ bridgeOpt.label | translate }}&lt;/option&gt;
					&lt;/select&gt;
				&lt;/div&gt;
			&lt;/div&gt;
			
			&lt;div class="row"&gt;
				&lt;div class="form-group col-sm-6"&gt;
					
				&lt;/div&gt;
				&lt;div class="form-group col-sm-6"&gt;
					&lt;label class="xm-label"&gt;Post to Chat&lt;/label&gt;
					&lt;select class="form-control" ng-model="chat_room"&gt;
						&lt;option ng-repeat="app in chat_apps_options" value="{{ app.value }}"&gt;{{ app.label | translate }}&lt;/option&gt;
					&lt;/select&gt;
				&lt;/div&gt;
			&lt;/div&gt;
			
			&lt;div class="row"&gt;
				&lt;div class="form-group col-md-12" ng-class="engageXMForm.subject.$error.required ? 'is-required' : 'is-filled'"&gt;
					&lt;span class="required-marker" &gt;&lt;/span&gt;
					&lt;label class="xm-label"&gt;{{ 'ENGAGE_XM.LABEL.SUBJECT' | translate }}&lt;/label&gt;
					&lt;input type="text" class="form-control" ng-model="subject" id="subject" name="subject" required="required" ng-maxlength="200" /&gt;
					&lt;div class="xm-error" ng-messages="engageXMForm.subject.$error" ng-show="engageXMForm.$submitted"&gt;
						&lt;div ng-message="required"&gt;{{ 'ENGAGE_XM.ERROR.REQUIRED' | translate }}&lt;/div&gt;
						&lt;div ng-message="maxlength"&gt;{{ 'ENGAGE_XM.ERROR.MAX_LENGTH' | translate:'{ max_length: 200 }' }}&lt;/div&gt;
					&lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;
			&lt;div class="row"&gt;
				&lt;div class="form-group col-md-12" ng-class="engageXMForm.message.$error.required ? 'is-required' : 'is-filled'"&gt;
					&lt;span class="required-marker" &gt;&lt;/span&gt;
					&lt;label class="xm-label"&gt;{{ 'ENGAGE_XM.LABEL.MESSAGE' | translate }}&lt;/label&gt;
					&lt;textarea class="form-control" ng-model="message" id="message" name="message" required="required" ng-maxlength="2000" /&gt;
					&lt;div class="xm-error" ng-messages="engageXMForm.message.$error" ng-show="engageXMForm.$submitted"&gt;
						&lt;div ng-message="required"&gt;{{ 'ENGAGE_XM.ERROR.REQUIRED' | translate }}&lt;/div&gt;
						&lt;div ng-message="maxlength"&gt;{{ 'ENGAGE_XM.ERROR.MAX_LENGTH' | translate:'{ max_length: 2000 }' }}&lt;/div&gt;
					&lt;/div&gt;
				&lt;/div&gt;
			&lt;/div&gt;
			&lt;div class="row"&gt;
				&lt;div class="col-md-4"&gt;
					&lt;button class="btn btn-default xm-btn-default" ng-click="submit()"&gt;{{ 'ENGAGE_XM.BUTTON.SUBMIT' | translate }}&lt;/button&gt;
				&lt;/div&gt;
			&lt;/div&gt;
		&lt;/form&gt;
		&lt;/div&gt;
		&lt;div class="panel" ng-if="is_finished"&gt;
			&lt;h4 class="xm-header"&gt;{{ 'ENGAGE_XM.TITLE' | translate }}&lt;/h4&gt;
			&lt;div class="row"&gt;
				&lt;div class="col-md-8 xm-success-message"&gt;
					&lt;p&gt;{{ 'ENGAGE_XM.MESSAGE.SUCCESS' | translate }}&lt;/p&gt;
				&lt;/div&gt;
			&lt;/div&gt;
			&lt;a href="{{engage_url}}" target="_top" class="btn btn-default xm-btn-default"&gt;{{ 'ENGAGE_XM.BUTTON.VIEW_RECORD' | translate }}&lt;/a&gt;
		&lt;/div&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;/j:jelly&gt;]]&gt;&lt;/html&gt;&lt;name&gt;xm_engage_with_xmatters_content&lt;/name&gt;&lt;processing_script/&gt;&lt;sys_class_name&gt;sys_ui_page&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2016-07-11 18:30:00&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;true&lt;/sys_customer_update&gt;&lt;sys_id&gt;c65690b94f2822008472a88ca310c7c2&lt;/sys_id&gt;&lt;sys_mod_count&gt;38&lt;/sys_mod_count&gt;&lt;sys_name&gt;xm_engage_with_xmatters_content&lt;/sys_name&gt;&lt;sys_package display_value="xMatters" source="x_xma_xmatters"&gt;5950d7444f2231000e9fa88ca310c78c&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="xMatters"&gt;5950d7444f2231000e9fa88ca310c78c&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_page_c65690b94f2822008472a88ca310c7c2&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2017-03-30 17:49:56&lt;/sys_updated_on&gt;&lt;/sys_ui_page&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="CI  Support Groups for Engage">3cc0de5adbf53200a34fd421cf9619ba</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2017-03-31 16:11:22</sys_created_on>
<sys_id>30c0de5adbf53200a34fd421cf9619bb</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2017-03-31 16:11:22</sys_updated_on>
<table/>
<target_name>xm_engage_with_xmatters_content</target_name>
<type>UI Page</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="xMatters">5950d7444f2231000e9fa88ca310c78c</application>
<category>customer</category>
<comments/>
<name>sys_ui_script_e4c0f8824f6c220078bae321a310c7b6</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ui_script"&gt;&lt;sys_ui_script action="INSERT_OR_UPDATE"&gt;&lt;active&gt;true&lt;/active&gt;&lt;description/&gt;&lt;global&gt;false&lt;/global&gt;&lt;name&gt;x_xma_xmatters.xm_app_engage_xmatters&lt;/name&gt;&lt;script&gt;&lt;![CDATA[var engageApp = angular.module('xm.engage-xm', [ 'ngTagsInput', 'ngMessages', 'pascalprecht.translate', 'xm.xmatters-service', 'xm.location-service', 'xm.options-provider', 'xm.glide-ajax' ]);
 // Global configuration for ng tags input module 
engageApp.config(function(tagsInputConfigProvider) {
	tagsInputConfigProvider.setDefaults('tagsInput', {
		placeholder: 'Find Recipients',
		replaceSpacesWithDashes: false,
		addFromAutocompleteOnly: true,
		displayProperty: 'name',
		keyProperty	: 'targetName'
	}).setDefaults('autoComplete', {
		displayProperty: 'name',
		minLength: 2
	});
});
// Configuration for translations
engageApp.config(function ($translateProvider) {
  $translateProvider.translations('en', {
  	ENGAGE_XM: {
  		TITLE: 'Engage with xMatters',
  		LABEL: {
  			RECIPIENTS: 'Recipients',
  			SEND_PRIORITY: 'Priority',
  			CONFERENCE_BRIDGE: 'Conference Bridge',
  			SUBJECT: 'Subject',
  			MESSAGE: 'Message',
			CI_GROUPS: 'CI Support Groups'
  		},
  		BUTTON: {
  			SUBMIT: 'Submit',
  			VIEW_RECORD: 'View Record'
  		},
  		ERROR: {
  			REQUIRED: 'Required field',
  			MAX_LENGTH: 'Maximum length {{max_length}} characters'
  		},
  		MESSAGE: {
  			SUCCESS: 'Your request has been submitted successfully. To track the progress of this request in ServiceNow, view the Engage with xMatters record.'
  		},
  		OPTIONS: {
  			CONFERENCE_BRIDGE: {
  				"None": '-- None --',
  				"Hosted": 'xMatters Hosted'
  			},
  			SEND_PRIORITY: {
  				"low": 'Low',
  				"medium": 'Medium',
  				"high": 'High'
  			},
  			RECIPIENT_TYPE: {
  				"people": "People",
  				"groups": "Groups"
  			},
			CHAT_ROOMS: {
				"None": "-- None --",
				"Slack": "Slack",
				"HipChat": "HipChat"
			}
  		}
  	}
  });
  $translateProvider.preferredLanguage('en');
});
engageApp.controller('engageCtlr', 
	function($scope, $translate, XMService, LocationService, OptionsProvider, GlideAjax) {
		 // Core scope variables 
		$scope.is_finished = false; 
		$scope.is_invalid = false;
		$scope.global_errors = [];

		 // form model scope variables and default values 
		$scope.subject = '';
		$scope.message = '';
		$scope.recipients = [];
		$scope.conference_bridge = 'None';
		$scope.send_priority = 'medium';
	
		$scope.chat_room = 'None';
		$scope.chat_apps_options = OptionsProvider.chat_apps;
	

		 // result scope variable 
		$scope.engage_url = '';

		 // behind the scenes scope variables used for options/state 
		$scope.xm_search_state = XMService.searchState;
		$scope.conference_bridge_options = OptionsProvider.conference_bridges;
		$scope.send_priority_options = OptionsProvider.send_priorities;
		$scope.recipientTypes = [ 
			{
				"label": "ENGAGE_XM.OPTIONS.RECIPIENT_TYPE.people",
				"typeahead": XMService.searchPeople
			}, 
			{
				"label": "ENGAGE_XM.OPTIONS.RECIPIENT_TYPE.groups",
				"typeahead": XMService.searchGroups
			} 
		]; 
		$scope.activeRecipientType = $scope.recipientTypes[0];
	
		

		// Set the incident id scope variable based on search parameters in the url 
		$scope.incident_id = LocationService.searchParams.incident_id;
		if( typeof $scope.incident_id === 'undefined' || $scope.incident_id === null || $scope.incident_id === '' ) {
			console.log( 'No incident identifier was defined' );
			$scope.global_errors.push( 'Missing "incident_id" parameter: A valid ServiceNow Incident system id must be set to continue' );
		}
	
	
		$scope.all_ci_groups = [];
	
		var retrieveIncident = new GlideAjax( 'xMattersAjaxExtended' );
		retrieveIncident.addParam( 'sysparm_name', 'getIncident' );
		retrieveIncident.addParam( 'sysparm_sys_id', $scope.incident_id );
		retrieveIncident.send().then( function( resp ) {
			if( resp.success ) {
				$scope.incident = resp.data;
				
				if( $scope.incident.cmdb_ci != null ) {
					var ga = new GlideAjax( 'xMattersAjaxExtended' );
					ga.addParam( 'sysparm_name', 'getCISupportGroups' );
					ga.addParam( 'sysparm_cisys_id', $scope.incident.cmdb_ci );
					ga.send().then( function( resp ) {
						if( resp.success ) {
							
							$scope.all_ci_groups = resp.data;


						} else {
							console.log( resp );
						}
					} ).catch( function( resp ){
						console.log( resp );
					} );
				}
				

			} else {
				console.log( 'Error getting Incident: ' + JSON.stringify( resp ) );
			}
		});

	
		$scope.ci_groups = [];
		$scope.loadCIGroups = function( $query ) {
	  
		  return $scope.all_ci_groups.filter( function( item ) {
			return item.group.toLowerCase().indexOf( $query.toLowerCase() ) != -1;
		  });
	  
	  };
	
	

		/**
		 * Changes the active recipient type based on the input group action dropdown selection
		 * 
		 * @param  {Integer} selectedType 
		 *         index of the selected recipient option
		 */
		$scope.selectRecipientType = function( selectedIndex ) {
			$scope.activeRecipientType = $scope.recipientTypes[selectedIndex];
		};

		/**
		 * Submits the engageXMForm form, and if valid, tries to create a new Engage with xMatters record via
		 * the xMattersAjaxEngage client callable script include.
		 */
		$scope.submit = function() {
			$scope.engageXMForm.$setSubmitted( true );
			if( $scope.engageXMForm.$invalid ) {
				console.log( 'The form will not be submitted in an invalid state' );
				console.log( $scope.engageXMForm );
			} else {
				var recipientTargets = [];
				for( var i = 0; i &lt; $scope.recipients.length; i++ ) {
					recipientTargets.push( $scope.recipients[i].targetName );
				}
				
				for( var j = 0; j &lt; $scope.ci_groups.length; j++ ) {
					
					console.log( 'Checking ' + $scope.ci_groups[j].group );
					if( $scope.ci_groups[j].group !== 'None' )
					  recipientTargets.push( $scope.ci_groups[j].group );
				}
					
				var formData = {
					"recipients": recipientTargets.join( ',' ),
					"subject":           $scope.subject,
					"message":           $scope.message,
					"conference_bridge": $scope.conference_bridge,
					"incident_id":       $scope.incident_id,
					"send_priority":     $scope.send_priority,
					"chat_room":         $scope.chat_room
				};
				var ga = new GlideAjax( 'xMattersAjaxEngage' );
				ga.addParam( 'sysparm_name', 'submitEngageWithXMatters' );
				ga.addParam( 'form_data', JSON.stringify( formData ) );
				ga.send().then( function( resp ) {
					if( resp.success ) {
						$scope.is_finished = true;
						$scope.engage_url = '/nav_to.do?uri=x_xma_xmatters_engage_with_xmatters.do?sys_id=' + resp.data.sys_id;
					} else {
						console.log( resp );
					}
				} ).catch( function( resp ){
					console.log( resp );
				} );
			}
		};
	} );]]&gt;&lt;/script&gt;&lt;script_name&gt;xm_app_engage_xmatters&lt;/script_name&gt;&lt;sys_class_name&gt;sys_ui_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2016-07-12 15:03:56&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;true&lt;/sys_customer_update&gt;&lt;sys_id&gt;e4c0f8824f6c220078bae321a310c7b6&lt;/sys_id&gt;&lt;sys_mod_count&gt;29&lt;/sys_mod_count&gt;&lt;sys_name&gt;x_xma_xmatters.xm_app_engage_xmatters&lt;/sys_name&gt;&lt;sys_package display_value="xMatters" source="x_xma_xmatters"&gt;5950d7444f2231000e9fa88ca310c78c&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="xMatters"&gt;5950d7444f2231000e9fa88ca310c78c&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_script_e4c0f8824f6c220078bae321a310c7b6&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2017-03-30 18:12:22&lt;/sys_updated_on&gt;&lt;use_scoped_format&gt;false&lt;/use_scoped_format&gt;&lt;/sys_ui_script&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="CI  Support Groups for Engage">3cc0de5adbf53200a34fd421cf9619ba</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2017-03-31 16:11:22</sys_created_on>
<sys_id>70c0de5adbf53200a34fd421cf9619bb</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2017-03-31 16:11:22</sys_updated_on>
<table/>
<target_name>x_xma_xmatters.xm_app_engage_xmatters</target_name>
<type>UI Script</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="xMatters">5950d7444f2231000e9fa88ca310c78c</application>
<category>customer</category>
<comments/>
<name>sys_script_include_1ea6139ddb5d3200a34fd421cf9619d1</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_script_include"&gt;&lt;sys_script_include action="INSERT_OR_UPDATE"&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;active&gt;true&lt;/active&gt;&lt;api_name&gt;x_xma_xmatters.xMattersAjaxExtended&lt;/api_name&gt;&lt;client_callable&gt;true&lt;/client_callable&gt;&lt;description&gt; .&lt;/description&gt;&lt;name&gt;xMattersAjaxExtended&lt;/name&gt;&lt;script&gt;&lt;![CDATA[gs.include("xMattersConfigExtended");
gs.include( "xMattersAjaxEngage" );

var xMattersAjaxExtended = Class.create();

// Object.extendsObject apparently only takes 2 parameters,
// so to add more than two objects, we call this twice. 
xMattersAjaxExtended.prototype = Object.extendsObject( global.AbstractAjaxProcessor, Object.extendsObject( new xMattersAjaxEngage(), {


		/**
	 * Submits a new Inform with xMatters record in ServiceNow (note that this does not perform any communication between ServiceNow and xMatters)
	 * When called from glide ajax, must have a stringified "form_data" parameter. This parameter should look like the following:
	 * 	{

	 * 	}
	 * 
	 * @return {String} A stringified JSON object with the following details:
	 * {
	 * 		"success": true or false depending on whether the submission was successful,
	 * 		"error": only present if "success" = false - a string describing what went wrong,
	 * 		"data": only present if "success" = true - an object with the following properties:
	 * 			{
	 * 				"sys_id": the id of the new Engage with xMatters record
	 * 			}
	 * }
	 */
	submitInformWithXMatters: function() {
		var response;
		try {
			var form_data = this.getParameter( 'form_data' );	
			var formData = new global.JSON().decode( form_data );

			var informRequest = new GlideRecord( 'x_xma_xmatters_inform_with_xmatters' );
			informRequest.initialize();
			
			informRequest.business_impact = formData.business_impact;
			informRequest.first_reported  = formData.first_reported.replace( /T/g, ' ' );
			informRequest.locations       = formData.locations;
			informRequest.services        = formData.services;
			informRequest.update          = formData.update;
			informRequest.update_type     = formData.update_type;
			informRequest.parent_incident = formData.parent_incident;

			informRequest.insert();

			response = {
				success: true,
				data: { sys_id: String( informRequest.sys_id ) }
			};
		} catch( e ) {
			response = {
				success: false,
				error: String( e )
			};
		}
		return new global.JSON().encode( response );
	},
	
	
	
	
	getLocations: function() {
		var conf = new xMattersConfigExtended();
		response = {
			success: true,
			data: conf.INFORM.LOCATIONS.LIST
		};
		
		return new global.JSON().encode( response );
	},
	
	getServices: function() {
		var conf = new xMattersConfigExtended();
		response = {
			success: true,
			data: conf.INFORM.SERVICES.LIST
		};
		return new global.JSON().encode( response );
	},
	
	getIncident: function() {

		var sys_id = this.getParameter( 'sysparm_sys_id' );	
		var rec = new GlideRecord( 'incident' );
		rec.get( sys_id );
		
		var fields = [ 'number', 'short_description', 'cmdb_ci' ];
		
		response =  {
			success: true,
			data: this._getIncFields( fields, rec )
		};
		
		return new global.JSON().encode( response );
		
	},
	
	getCISupportGroups: function() {

		var CISysID = this.getParameter( 'sysparm_cisys_id' );
        
        var CIUtil = new global.xMCIUtils();
        	
        var serviceIds = CIUtil.servicesRelatedToCI( CISysID, ["child", "parent"] );
	
        var list = [];
		var id = 0;
        for( var i in serviceIds ) {
            var service = new GlideRecord("cmdb_ci_service");
            service.get( serviceIds[i] );

			group = service.support_group.name.getDisplayValue() || 'None';
			label = group + ' (CI: ' + service.getDisplayValue() + ')';


            list.push( { 
				"id": id, 
				"ci": service.getDisplayValue(), 
				"group": group, 
				"label": label } );

			id ++;
        }
		
	
		var response = {
			"success": true,
			"data": list
		};
		
		return new global.JSON().encode( response );
		

    },
	
	
	// There isn't a GlideRecord.toJSON function, so
	// we'll fake it by just grabbing a handful of fields
	_getIncFields: function( fields, rec ) {

		var resp = {};
		for( var f in fields ) {
			key = fields[f];
			val = '' + rec[ fields[f] ];  //.getDisplayValue();
			//gs.info( 'Key: ' + key + '. Val: ' + val );
			resp[ key ] = val;
		}
		
		return resp;
	},
		
    type: 'xMattersAjaxExtended'
}));]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script_include&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2017-03-03 22:31:13&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;true&lt;/sys_customer_update&gt;&lt;sys_id&gt;1ea6139ddb5d3200a34fd421cf9619d1&lt;/sys_id&gt;&lt;sys_mod_count&gt;55&lt;/sys_mod_count&gt;&lt;sys_name&gt;xMattersAjaxExtended&lt;/sys_name&gt;&lt;sys_package display_value="xMatters" source="x_xma_xmatters"&gt;5950d7444f2231000e9fa88ca310c78c&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="xMatters"&gt;5950d7444f2231000e9fa88ca310c78c&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_include_1ea6139ddb5d3200a34fd421cf9619d1&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2017-03-30 17:59:31&lt;/sys_updated_on&gt;&lt;/sys_script_include&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="CI  Support Groups for Engage">3cc0de5adbf53200a34fd421cf9619ba</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2017-03-31 16:11:22</sys_created_on>
<sys_id>bcc0de5adbf53200a34fd421cf9619ba</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2017-03-31 16:11:22</sys_updated_on>
<table/>
<target_name>xMattersAjaxExtended</target_name>
<type>Script Include</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
<sys_update_xml action="INSERT_OR_UPDATE">
<action>INSERT_OR_UPDATE</action>
<application display_value="xMatters">5950d7444f2231000e9fa88ca310c78c</application>
<category>customer</category>
<comments/>
<name>sys_ui_page_94abf8b5db313200a34fd421cf9619c4</name>
<payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update table="sys_ui_page"&gt;&lt;sys_ui_page action="INSERT_OR_UPDATE"&gt;&lt;category&gt;general&lt;/category&gt;&lt;client_script/&gt;&lt;description/&gt;&lt;direct&gt;false&lt;/direct&gt;&lt;endpoint&gt;x_xma_xmatters_xm_engage_ci_group_template.do&lt;/endpoint&gt;&lt;html&gt;&lt;![CDATA[&lt;?xml version="1.0" encoding="utf-8" ?&gt;
&lt;j:jelly trim="false" xmlns:j="jelly:core" xmlns:g="glide" xmlns:j2="null" xmlns:g2="null"&gt;
&lt;style&gt;
	
.left-panel {
  float: left;
}

.left-panel img {
  width: 15px;
  height: 15px;
  vertical-align: middle;
}

.right-panel {
  float: left;
  margin-left: 10px;
  margin-top: 7px;
}

.right-panel span:first-child {
  font-size: 16px;
}

.right-panel span:nth-child(2) {
  font-size: 14px;
  color: gray;
}

.right-panel span:last-child {
  display: block;
  font-size: 14px;
  font-style: italic;
}

&lt;/style&gt;
&lt;div class="tag-template"&gt;	
&lt;!--	&lt;span&gt;&lt;img style="  width: 15px; height: 15px; vertical-align: middle;" src="{{data.icon}}"&gt;&lt;/img&gt;&lt;/span&gt; --&gt;
    &lt;span&gt;{{data.label}}&lt;/span&gt;
	&lt;span class="xm-right-icon"&gt;&lt;a class="remove-button" ng-click="$removeTag()"&gt;&lt;i class="fa fa-times"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/span&gt;
&lt;!--	&lt;span class="left-panel"&gt;
		&lt;img ng-src="{{data.icon}}" /&gt;
    &lt;/span&gt;

    &lt;span class="right-panel"&gt;
        &lt;span&gt;{{data.label}}&lt;/span&gt;
    &lt;/span&gt;
	&lt;span class="xm-right-icon"&gt;&lt;a class="remove-button" ng-click="$removeTag()"&gt;&lt;i class="fa fa-times"&gt;&lt;/i&gt;&lt;/a&gt;&lt;/span&gt;
--&gt;
&lt;/div&gt;
&lt;/j:jelly&gt;]]&gt;&lt;/html&gt;&lt;name&gt;xm_engage_ci_group_template&lt;/name&gt;&lt;processing_script/&gt;&lt;sys_class_name&gt;sys_ui_page&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2017-03-29 20:42:54&lt;/sys_created_on&gt;&lt;sys_customer_update&gt;true&lt;/sys_customer_update&gt;&lt;sys_id&gt;94abf8b5db313200a34fd421cf9619c4&lt;/sys_id&gt;&lt;sys_mod_count&gt;8&lt;/sys_mod_count&gt;&lt;sys_name&gt;xm_engage_ci_group_template&lt;/sys_name&gt;&lt;sys_package display_value="xMatters" source="x_xma_xmatters"&gt;5950d7444f2231000e9fa88ca310c78c&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_replace_on_upgrade&gt;false&lt;/sys_replace_on_upgrade&gt;&lt;sys_scope display_value="xMatters"&gt;5950d7444f2231000e9fa88ca310c78c&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_ui_page_94abf8b5db313200a34fd421cf9619c4&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;admin&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2017-03-30 00:12:03&lt;/sys_updated_on&gt;&lt;/sys_ui_page&gt;&lt;/record_update&gt;</payload>
<remote_update_set display_value="CI  Support Groups for Engage">3cc0de5adbf53200a34fd421cf9619ba</remote_update_set>
<replace_on_upgrade>false</replace_on_upgrade>
<sys_created_by>admin</sys_created_by>
<sys_created_on>2017-03-31 16:11:22</sys_created_on>
<sys_id>fcc0de5adbf53200a34fd421cf9619ba</sys_id>
<sys_mod_count>0</sys_mod_count>
<sys_updated_by>admin</sys_updated_by>
<sys_updated_on>2017-03-31 16:11:22</sys_updated_on>
<table/>
<target_name>xm_engage_ci_group_template</target_name>
<type>UI Page</type>
<update_domain>global</update_domain>
<update_set display_value=""/>
<view/>
</sys_update_xml>
</unload>
